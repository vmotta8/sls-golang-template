name: Serverless workflow

on: ['push']

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.x

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
  
  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    environment: staging

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.x

      - name: Clean & Build
        run: |
          make clean && make build

      - name: Create env file # Environment secrets
        run: |
          touch env.yml
          echo STAGE: "${{secrets.STAGE}}" >> env.yml

      - name: Serverless deploy
        uses: serverless/github-action@v3
        with:
          args: deploy
        env: # Repository secrets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  
  deploy-main:
    if: github.ref == 'refs/heads/main'
    environment: main

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.x

      - name: Clean & Build
        run: |
          make clean && make build

      - name: Create env file # Environment secrets
        run: |
          touch env.yml
          echo STAGE: "${{secrets.STAGE}}" >> env.yml

      - name: Serverless deploy
        uses: serverless/github-action@v3
        with:
          args: deploy
        env: # Repository secrets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
